function call() {} if (sessionStorage.getItem('execute_all') === 'true') {} else { tit(); } Q_KV_module([ ["elem", "\n\n10.2 软件设计综合练习1要求达到80分以上", [1.6, 400, "0.32rem"], [ ["position", "relative"], ["left", "10%"], ["textShadow", "rgb(0 0 255 / 20%) 0.1rem 0.1rem 0.24rem, rgb(51 51 34 / 13%) 0.16rem 0.16rem 0.32rem"], ["addClassName", "questionsPart"] ] ], ["elem", "\n\t 判断题", [0.96, 800], [ ["MB", "0.32rem"] ] ], ["JQ", "用例之间的关系主要有：包含、扩展和泛化。()", 0, 2], ["JQ", "从用户的角度来看，他们并不想了解系统的内部结构和设计，他们所关心的是系统所能提供的服务。()", 1, 2], ["JQ", "E-R图主要用来描述系统内各个部件的功能和数据在它们之间传递的情况，来说明系统所完成的功能。()", 0, 2], ["JQ", "需求确定是任何软件开发生命周期中最富有挑战性的一个内容。()", 1, 2], ["JQ", "概要设计要建立在需求分析的基础之上，软件需求文档是软件概要设计的前提条件。()", 1, 2], ["JQ", "常规IDE环境中一般都不支持调试。()", 0, 2], ["JQ", "任何IDE都应该具有的一个共同目的，就是帮助开发者进行快速编程并避免错误。()", 1, 2], ["JQ", "程序流程图可以明确业务范围，帮助识别系统边界。()", 1, 2], ["JQ", "软件可靠性(softwarereliability)是软件产品在规定的条件下和规定的时间区间完成规定功能的能力。()", 1, 2], ["JQ", "流程图是面向对象的，用于描述一个具体对象或者业务。()", 0, 2], ["JQ", "for循环中的三个表达式都可以省略。()", 1, 2], ["JQ", "函数定义与函数的声明是一回事。()", 0, 2], ["JQ", "字符型数据不可以进行加减运算。()", 0, 2], ["JQ", "在进行UI设计师需要充分考虑布局的合理化问题，即软件UI设计的布局角度。()", 1, 2], ["JQ", "性能优化后，只要确保性能得到提升，测试数据无需记录。()", 0, 2], ["JQ", "系统优化前可以不进行性能测试，或者测试后不保存数据。()", 0, 2], ["JQ", "用户使用指南是用户文档中最重要的一部分。()", 1, 2], ["JQ", "参与者是与系统交互的所有事物，一定在系统之内。()", 0, 2], ["JQ", "流程处理关系为并行关系的，需要将流程放在同一高度。()", 1, 2], ["JQ", "软件UI设计的准确性即使用丰富多彩的标记和颜色。()", 0, 2], ["elem", "\n\t 填空题", [0.96, 800], [ ["MB", "0.32rem"] ] ], ["fill", "传统的活动图分为两种，分别为关键路径法___网络和___。", ["CPM", "甘特图"], 2], ["fill", "在建立了初步的用例模型后，还可以利用用例之间的关系来调整___。", ["用例模型"], 2], ["fill", "___一般用来描述系统的状态和引起系统状态转换的事件，来表示系统的行为，指出作为特定事件的结果将执行哪些动作。", ["状态转换图"], 2], ["fill", "软件的可维护性可以通过7个质量特性来衡量，分别是可理解性、可测试性、可移植性、可使用性、___、___、___。", ["可修改性", "可靠性", "效率"], 2], ["fill", "软件代码的编写规范，即软件的___。", ["易读性"], 2], ["fill", "如果要设置标签控件为透明,需要设置___属性.", ["Transparent"], 2], ["fill", "同一组按钮中，一次只允许选择一个的是___。", ["单选框"], 2], ["fill", "在C程序中,变量名代表___和___的位置.", ["存储器", "内存"], 2], ["fill", "装饰模式，即对已有对象的功能进行___，以获得更加符合用户需求的对象。", ["扩展"], 2], ["fill", "软件需求分类，分为___需求和非功能性需求。", ["功能性"], 2], ["fill", "用户使用指南的完整性、___、易理解性非常重要。", ["一致性"], 2], ["fill", "软件设计过程中提升可扩展性，可以增加需求的___，提高维护效率。", ["迭代速度"], 2], ["fill", "在完成对软件系统的需求分析之后，接下来需要进行的是软件系统的___。", ["概要设计"], 2], ["fill", "PowerDesigner可以完成___的建模。", ["数据库"], 2], ["fill", "MicrosoftProject是一个成熟的___。", ["项目管理工具"], 2], ["fill", "需求分析的结果是___。", ["需求文档"], 2], ["elem", "\n\t 单选题", [0.96, 800], [ ["MB", "0.32rem"] ] ], ["CQ", "下列说法正确的是：()。", ["所谓系统测试就是同时运行新开发出来的系统和将被它取代的旧系统，以便比较新旧两个系统的处理结果。", "所谓模块测试就是同时运行新开发出来的系统和将被它取代的旧系统，以便比较新旧两个系统的处理结果。", "所谓验收测试就是同时运行新开发出来的系统和将被它取代的旧系统，以便比较新旧两个系统的处理结果。", "所谓平行测试就是同时运行新开发出来的系统和将被它取代的旧系统，以便比较新旧两个系统的处理结果。"], 4, 2], ["CQ", "()是在测试过程中出现的一些问题的报告。", ["测试日志", "测试事件报告", "测试总结报告", "漏洞追查报告"], 2, 2], ["CQ", "软件测试计划中的测试范围必须高度覆盖()需求。", ["硬件", "数据", "性能", "功能"], 4, 2], ["CQ", "如下程序的输出结果是()main(){intx=2,a=0,b=0;switch(x){case2:a++;b++;case1:++a;b--;break;case0:b++;}printf(\"a=%d,b=%d\\n\",a,b);}", ["a=2,b=0", "a=2,b=1", "a=1,b=1", "a=1,b=0"], 1, 2], ["CQ", "有以下程序#include‹stdio.h›main(){intx;scanf(\"%d\",&x);if(x‹=3);elseif(x!=10)printf(\"%d\\n\",x);}程序运行时,输入的值在哪个范围()才会有输出结果.", ["不等于10的整数", "大于3且不等于10的整数", "大于3或不等于10的整数", "小于3的整数"], 2, 2], ["CQ", "执行以下程序段后,m的值为()inta[6]={1,2,3,4,5,6},m,*p;p=&a[0];m=(*p)*(*(p+2))*(*(p+4));", ["15", "14", "13", "12"], 1, 2], ["CQ", "表达式(a=3*5,a*4),a+5中a的值是()", ["15", "14", "13", "12"], 1, 2], ["CQ", "下面程序的输出是()#include‹stdio.h›voidmain(){intk=11;printf(\"k=%d,k=%o,k=%x\\n\",k,k,k);}", ["k=11,k=12,k=11", "k=11,k=13,k=13", "k=11,k=013,k=0xb", "k=11,k=13,k=b"], 4, 2], ["CQ", "设inta=12,则执行完语句a+=a-=a*a后,a的值是().", ["552", "264", "144", "-264"], 4, 2], ["CQ", "执行下面程序中的输出语句后,输出结果是().#include‹stdio.h›voidmain(){inta;printf(\"%d\\n\",(a=3*5,a*4,a+5));}", ["65", "20", "15", "10"], 2, 2], ["CQ", "绘制流程图时，应当遵循()的原则。", ["从左到右，从下到上", "从左到右，从上到下", "从右到左，从上到下", "从右到左，从下到上"], 2, 2], ["CQ", "下列一组初始化语句中，正确的是()。", ["inta[8]={};", "inta[9]={0,7,0,4,8};", "inta[5]={9,5,7,4,0,2};", "inta[7]=7*6;"], 2, 2], ["CQ", "下列说法正确的是：()。", ["子系统测试和验收测试都兼有检测和组装双重含义，通常称为集成测试。", "子系统测试和模块测试都兼有检测和组装双重含义，通常称为集成测试。", "子系统测试和平行测试都兼有检测和组装双重含义，通常称为集成测试。", "子系统测试和系统测试都兼有检测和组装双重含义，通常称为集成测试。"], 4, 2], ["CQ", "()就是总结在测试工作中所找到的一切东西。", ["测试日志", "测试事件报告", "测试总结报告", "漏洞追查报告"], 3, 2], ["CQ", "在软件质量特性中，软件的()是指在规定条件下，在规定的时间内，不引起系统失效的概率。", ["可靠性", "功能度", "易使用性", "时间经济性"], 1, 2], ["CQ", "系统优化方案可以基于性能优化来实现，性能优化的前提性能测试即()。", ["黑盒测试", "白盒测试", "单元测试", "压力负载测试"], 4, 2], ["CQ", "菱形为判断符号，必须要有“是和否”两种处理结果，所以一定要有()条箭头流出。", ["1", "3", "2", "4"], 3, 2], ["CQ", "下列说法正确的是：()。", ["程序流程图中的菱形框代表关系，它确定了实体对之间逻辑上和数量上的联系", "状态转化图中的菱形框代表关系，它确定了实体对之间逻辑上和数量上的联系", "对话图中的菱形框代表关系，它确定了实体对之间逻辑上和数量上的联系", "实体关系图中的菱形框代表关系，它确定了实体对之间逻辑上和数量上的联系"], 4, 2], ["CQ", "流程图中，判断框为：()", ["圆弧形框", "矩形框", "菱形框", "圆点"], 3, 2], ["CQ", "下列说法错误的是：()。", ["使用对话框编辑器，用户可以增加、排列或编辑控件", "使用对话框编辑器，用户可以更改[Tab]键顺序", "使用对话框编辑器，用户可以测试一个对话框", "使用对话框编辑器，用户可以删除控件"], 4, 2], ["CQ", "对话框的种类可以分为：()。", ["无模式对话框和有模式对话框", "单模对话框和多模对话框", "单－无模式对话框和单－有模式对话框", "多－无模式对话框和多－有模式对话框"], 1, 2], ["CQ", "软件开发通常由()4个阶段组成。", ["概要设计、详细设计、编码、软件维护", "概要设计、详细设计、编码、软件测试", "软件定义、详细设计、编码、软件测试", "软件定义、详细设计、编码、软件维护"], 2, 2], ["CQ", "常用控件的使用过程中，如果要对控件的字体、颜色等内容进行调整，需要在()窗格中进行。", ["属性", "调试", "编辑", "文件"], 1, 2], ["CQ", "下列说法正确的是：()。", ["类是组成软件结构的基本元素，它是数据说明和算法的集合", "函数是组成软件结构的基本元素，它是数据说明和算法的集合", "对象是组成软件结构的基本元素，它是数据说明和算法的集合", "模块是组成软件结构的基本元素，它是数据说明和算法的集合"], 4, 2], ["CQ", "对源程序的质量要求是：正确、可靠、简明、清晰和较高的执行效率。其中，()是最重要的要求。", ["正确性和较高的执行效率", "可靠性和清晰性", "正确性和可靠性", "可靠性和较高的执行效率"], 3, 2], ["CQ", "在循环语句的循环体中执行break语句，其作用是()。", ["跳出该循环体，提前结束循环", "继续执行break语句之后的循环体各语句", "结束本次循环，进行下次循环", "终止程序运行"], 1, 2], ["CQ", "执行语句for(i=10;i>0;i--)；后，变量i的值为()。", ["10", "9", "0", "1"], 3, 2], ["CQ", "在软件测试方法中，白盒测试法把程序看成是一个透明的盒子，以程序的内部结构和()为依据，对程序的所有逻辑路径进行细致的检查。", ["功能", "算法", "外部结构", "处理过程"], 4, 2], ["CQ", "下列说法正确的是：()。", ["对于功能测试的效率，主要依赖于建立测试所需数据的工作量大小。", "对于功能测试的效率，主要依赖于应用的复杂度、窗口的个数，以及每个窗口中的动作数目。", "对于功能测试的效率，主要依赖于软件编写的质量。", "对于功能测试的效率，主要依赖于软件的逻辑复杂程度。"], 2, 2], ["CQ", "下列说法正确的是:().", ["黑盒测试技术中的边界值分析在很大程度上是试探性的,与设计者的经验有关.", "黑盒测试技术中的划分等价类在很大程度上是试探性的,与设计者的经验有关.", "黑盒测试技术中的错误推测法在很大程度上是试探性的,与设计者的经验有关.", "黑盒测试技术中的逻辑覆盖法在很大程度上是试探性的,与设计者的经验有关."], 3, 2], ["CQ", "软件设计说明应该包括概要设计说明书、详细设计说明书、( )。", ["软件需求说明书", "数据要求说明书", "数据库设计说明书", "用户手册"], 3, 2], ["CQ", "在进行软件结构概要设计时要遵循一些原则，其中“深度、宽度、扇出和扇入应该适中”中的扇入指( )。", ["软件结构控制的层数", "软件结构中模块层的最多模块数", "一个模块直接控制的模块数", "一个模块被多少模块调用"], 4, 2], ["CQ", "概要设计的任务是：( )。", ["确定软件的结构及模块的划分，并确定各模块之间的接口", "确定每个模块的算法和数据结构及细节", "描述系统展现给用户的行为和执行的操作等", "确定系统的目标"], 1, 2], ["CQ", "需求验证应该从下述几个方面进行验证：（）？", ["可靠性、可用性、易用性、重用性", "可维护性、可移植性、可重用性、可测试性", "一致性、现实性、完整性、有效性", "功能性、非功能性"], 3, 2], ["CQ", "可以被嵌入任何现代处理器中,跨平台性非常好的语言是:( ) 。", ["Python", "C/C++", "JAVA", "C#"], 2, 2], ["CQ", "()是最典型的面向对象语言，吸收了C++语言的各种优点，但占用内存较多，启动时间较长。", ["C#", "JavaScript", "JAVA", "PHP"], 3, 2], ["CQ", "下列说法正确的是：( )。", ["随着软件工程的发展，出现了一些面向对象设计专用的语言，称为PDL语言", "随着软件工程的发展，出现了一些程式化设计专用的语言，称为PDL语言", "随着软件工程的发展，出现了一些模块化程序设计专用的语言，称为PDL语言", "随着软件工程的发展，出现了一些软件过程设计专用的语言，称为PDL语言"], 4, 2], ["CQ", "下列不属于可视化程序设计语言的是：( )。", ["C", "Visual Basic", "Visual C++", "Delphi"], 1, 2], ["CQ", "在面向对象方法中,一切事物、概念都可以看作（ ）。", ["数据", "方法", "对象", "函数"], 3, 2], ["CQ", "为表示关系x≥y≥z,应使用C语言表达式()。", ["(x›=y)&&(y›=z)", "(x›=y)AND(y›=z)", "(x›=y›=z)", "(x›=y)&(y›=z)"], 1, 2], ["elem", "\n\t 多选题", [0.96, 800], [ ["MB", "0.32rem"] ] ], ["MCQ", "在下面关于需求验证任务的描述中，正确的是( )。", ["需要核查功能描述的正确性", "需要核查功能描述的清晰性", "需要明确需求的完整性", "除管理者外的用户不能参与评审"], [1, 2, 3], 2 ], ["MCQ", "下列关于软件生命周期的说法不正确的是( )。", ["通常，软件生命周期由软件定义、可行性研究和需求分析3个时期组成", "通常，软件生命周期由问题定义、可行性研究和需求分析3个时期组成", "通常，软件生命周期由软件定义、软件开发和软件维护3个时期组成", "通常，软件生命周期由问题定义、软件开发和软件维护3个时期组成"], [1, 2, 4], 2 ], ["MCQ", "概要设计主要包括三个方面的设计：( )。", ["系统架构设计", "系统功能设计", "软件结构设计", "数据结构设计"], [1, 3, 4], 2 ], ["MCQ", "软件设计用户界面的设计规范包括： ( )。", ["一致性", "准确性", "布局", "系统操作与相应"], [1, 2, 3, 4], 2 ], ["MCQ", "下列说法不正确的是：( )。", ["在选取测试数据时要考虑的条件是能否验证采用这个数据时代码的正确性。", "在选取测试数据时要考虑的条件是这个测试数据纠正错误的潜力如何。", "在选取测试数据时要考虑的条件是这个测试数据是否能够纠正错误。", "在选取测试数据时要考虑的条件是能否验证采用这个数据时程序的正确性。"], [1, 2, 3], 2 ], ["MCQ", "需求确定具有很大的挑战性，是因为用户：( )。", ["不清楚需要系统做什么。", "不知道真正的需求。", "过分夸大需求。", "当时提供的需求与后来提供的需求发生冲突。"], [1, 2, 3, 4], 2 ], ["MCQ", "( )不是结构化系统分析的基本工具。", ["程序流程图", "数据流图", "状态转化图", "对话图"], [1, 3, 4], 2 ], ["MCQ", "下列说法正确的是：( )。", ["划分等价类属于黑盒测试技术。", "边界值分析属于黑盒测试技术。", "错误推测法属于黑盒测试技术。", "逻辑覆盖法属于黑盒测试技术。"], [1, 2, 3], 2 ], ["MCQ", "决定软件可维护性的因素有：( )。", ["系统的大小。", "系统的年龄。", "结构合理性。", "结构健全性。"], [1, 2, 3], 2 ], ["MCQ", "软件需求就是系统必须完成的事以及必须具备的品质，是多层次的，包括：( )。", ["性能需求。", "业务需求。", "用户需求。", "系统需求。"], [2, 3, 4], 2 ], ["elem", "\n\n\n\n", [0.96, 400]] ]);