function call() {} if (sessionStorage.getItem('execute_all') === 'true') {} else { tit(); } Q_KV_module([ ['elem', '\n\n软件设计 Part_02 2022.09.22', [1.6, 400, '0.32rem'], [ ['position', 'relative'], ['left', '10%'], ['width', '90%'], ['textShadow', 'rgb(0 0 255 / 20%) 0.1rem 0.1rem 0.24rem, rgb(51 51 34 / 13%) 0.16rem 0.16rem 0.32rem'], ['addClassName', 'questionsPart'] ] ], ['elem', '\n\t 单选题', [0.96, 800], [ ['MB', '0.32rem'] ] ], ['CQ', '菱形为判断符号，必须要有“是和否”两种处理结果，所以一定要有()条箭头流出。', [1, 2, 3, 4], 2, 1], ['CQ', '一个流程从开始符开始，以结束符结束。开始符只能出现()次，结束符号可以出现多次。', [1, 2, 3, 4], 1, 1], ['CQ', '流程图中，输入输出框为：()', ['圆弧形框', '矩形框', '平行四边形框', '圆点'], 3, 5], ['CQ', '流程图中，起止框为：()', ['圆弧形框', '矩形框', '平行四边形框', '圆点'], 1, 5], ['CQ', '流程图中，判断框为：()', ['圆弧形框', '矩形框', '菱形框', '圆点'], 3, 4], ['CQ', '下列说法正确的是：()。', ['程序流程图中的菱形框代表关系， 它确定了实体对之间逻辑上和数量上的联系', '状态转化图中的菱形框代表关系， 它确定了实体对之间逻辑上和数量上的联系', '对话图中的菱形框代表关系， 它确定了实体对之间逻辑上和数量上的联系', '实体关系图中的菱形框代表关系， 它确定了实体对之间逻辑上和数量上的联系'], 4, 7], ['CQ', '下列说法正确的是：()。', ['程序流程图的特点包括： 功能域明确； 不可能任意转移控制； 容易确定局部和全局数据的作用域； 容易表现嵌套关系', 'PAD图的特点包括： 功能域明确； 不可能任意转移控制； 容易确定局部和全局数据的作用域； 容易表现嵌套关系', '判定表的特点包括： 功能域明确； 不可能任意转移控制； 容易确定局部和全局数据的作用域； 容易表现嵌套关系', '盒图的特点包括： 功能域明确； 不可能任意转移控制； 容易确定局部和全局数据的作用域； 容易表现嵌套关系'], 4, 7], ['CQ', '下列说法正确的是：()。', ['面向对象方法的主要优点不包括： 稳定性好', '面向对象方法的主要优点不包括： 与人类习惯的思维方法一致', '面向对象方法的主要优点不包括： 减少了开发时间', '面向对象方法的主要优点不包括： 可重用性好'], 3, 2], ['CQ', '下列说法正确的是：()。', ['密码验证的功能主要是完成用户进入系统时的密码核对工作', '密码验证的功能主要是完成管理员进入系统时的身份认证工作', '密码验证的功能主要是完成用户进入系统时的身份认证工作', '密码验证的功能主要是完成管理员进入系统时的密码核对工作'], 3, 5], ['CQ', '密码验证模块包含的两个子模块是：()。', ['身份认证和密码修改', '身份认证和密码认证', '用户登录和密码修改', '用户登录和密码认证'], 1, 2], ['CQ', '密码验证的程序输入项不包括：()。', ['验证码', '权限', '用户名', '密码'], 1, 3], ['CQ', '()方法的主要优点包括：与人类习惯的思维方法一致、稳定性好、可重用性好、可维护性好。', ['结构化程序设计', '面向对象', '模块化程序设计', '程式化程序设计'], 2, 1], ['CQ', '在模块划分中，类是()的模块。', ['面向功能', '面向过程', '面向对象', '面向结构'], 3, 1], ['CQ', '()主要是指程序的运行效率和存储效率两个方面。', ['编码风格', '代码调试', '软件测试', '程序性能优化'], 4, 2], ['CQ', '()的概念是模块化、抽象、信息隐蔽和局部化概念的直接结果。', ['模块独立', '耦合', '内聚', '抽象化'], 1, 5], ['CQ', '软件开发通常由()4个阶段组成。', ['概要设计、 详细设计、 编码、 软件维护', '概要设计、 详细设计、 编码、 软件测试', '软件定义、 详细设计、 编码、 软件测试', '软件定义、 详细设计、 编码、 软件维护'], 2, 4], ['CQ', '下列说法正确的是：()。', ['编码的目的是将软件需求说明转化为软件总体设计， 确定软件结构及模块的划分， 并确定各模块之间的接口', '编码的目的是发现并排除软件中的错误， 最终把一个高质量的软件系统交付给用户使用', '编码的目的是确定每个模块的数据结构和算法， 确定模块的细节， 具体为： 外部接口、 内部接口、 输入输出、 局部数据', '编码的目的是实现人和计算机的通讯， 产生一个机器能执行的源程序'], 4, 1], ['CQ', '对话框的种类可以分为：()。', ['无模式对话框和有模式对话框', '单模对话框和多模对话框', '单－ 无模式对话框和单－ 有模式对话框', '多－ 无模式对话框和多－ 有模式对话框'], 1, 7], ['CQ', '下列说法错误的是：()。', ['使用对话框编辑器， 用户可以增加、 排列或编辑控件', '使用对话框编辑器， 用户可以更改[Tab] 键顺序', '使用对话框编辑器， 用户可以测试一个对话框', '使用对话框编辑器， 用户可以删除控件'], 4, 2], ['CQ', '常用控件中，用于执行命令的控件为：()', ['文本框', '标签', '按钮', '时间控件'], 3, 1], ['CQ', '常用控件中，用于接受用户输入的控件为：()', ['标签', '文本框', '按钮', '时间控件', ], 2, 1], ['CQ', '常用控件中，能够用于显示各种信息的控件为：()', ['时间控件', '文本框', '按钮', '标签'], 4, 2], ['CQ', '常用控件的使用过程中，如果要对控件的字体、颜色等内容进行调整，需要在()窗格中进行。', ['属性', '调试', '编辑', '文件'], 1, 1], ['CQ', '下列说法正确的是：()。', ['编码的目的是将软件需求说明转化为软件总体设计， 确定软件结构及模块的划分， 并确定各模块之间的接口', '编码的目的是发现并排除软件中的错误， 最终把一个高质量的软件系统交付给用户使用', '编码的目的是确定每个模块的数据结构和算法， 确定模块的细节， 具体为： 外部接口、 内部接口、 输入输出、 局部数据', '编码的目的是实现人和计算机的通讯， 产生一个机器能执行的源程序'], 4, 1], ['CQ', '下列说法正确的是：()。', ['类是组成软件结构的基本元素，它是数据说明和算法的集合', '函数是组成软件结构的基本元素，它是数据说明和算法的集合', '对象是组成软件结构的基本元素，它是数据说明和算法的集合', '模块是组成软件结构的基本元素，它是数据说明和算法的集合'], 4, 8], ['CQ', '对源程序的质量要求是：正确、可靠、简明、清晰和较高的执行效率。其中，()是最重要的要求。', ['正确性和较高的执行效率', '可靠性和清晰性', '正确性和可靠性', '可靠性和较高的执行效率'], 3, 2], ['CQ', '编码风格是指：()。', ['编写程序的方式以及表达的格局', '代码排版风格', '使用的编程语言的风格', '程序员编程的风格'], 1, 7], ['CQ', '下列说法正确的是：()。', ['编码的目的是将软件需求说明转化为软件总体设计， 确定软件结构及模块的划分， 并确定各模块之间的接口', '详细设计的任务是将软件需求说明转化为软件总体设计， 确定软件结构及模块的划分， 并确定各模块之间的接口', '概要设计的任务是将软件需求说明转化为软件总体设计， 确定软件结构及模块的划分， 并确定各模块之间的接口', '软件测试的任务是将软件需求说明转化为软件总体设计， 确定软件结构及模块的划分， 并确定各模块之间的接口'], 3, 2], ['CQ', '在循环语句的循环体中执行break语句，其作用是()。', ['跳出该循环体， 提前结束循环', '继续执行break语句之后的循环体各语句', '结束本次循环， 进行下次循环', '终止程序运行'], 1, 1], ['CQ', '=同29=在循环语句的循环体中执行break语句，其作用是()。', ['跳出该循环体， 提前结束循环', '继续执行break语句之后的循环体各语句', '结束本次循环， 进行下次循环', '终止程序运行'], 1, 1], ['CQ', '执行语句for(i=10;i>0;i--)；后，变量i的值为()。', [10, 9, 0, 1], 3, 2], ['CQ', '下列哪种方法不能提高程序的运行效率：()。', ['不要把不同的数据类型混在一起', '寻找复杂性小的算法', '简化逻辑结构', '尽量避免采用多维数组(C语言除外)和复杂的表格'], 3, 1], ['CQ', '下列说法错误的是：()。', ['要提高程序效率， 尽量不要把不同的数据类型混在一起', '提高程序效率， 可以寻找复杂性小的算法', '提高程序效率， 要尽量避免采用多维数组(C语言除外) 和复杂的表格', '提高程序效率， 可以采用简化逻辑结构的方法'], 4, 1], ['CQ', '下列说法正确的是：()。', ['书写清晰，是好程序的一个重要标准', '代码执行效率高，是好程序的一个重要标准', '逻辑结构简单，是好程序的一个重要标准', '逻辑结构清晰、容易理解，是好程序的一个重要标准'], 4, 4], ['CQ', 'C语言中非空的基本数据类型包括()。', ['整型, 实型, 逻辑型', '整型, 实型, 字符型', '整型, 字符型, 逻辑型', '整型, 实型, 逻辑型, 字符型'], 2, 5], ['CQ', '表达式5!=3的值是()。', ['T', '非零值', '0', '1'], 4, 1], ['CQ', '合法的数组定义是()。', ['int a[6] = {"string"};', 'int a[5] = {0, 1, 2, 3, 4, 5};', 'char a = {"string"};', 'char a[] = {0, 1, 2, 3, 4, 5};'], 4, 2], ['CQ', pre(`给出以下定义: char x[] = "abcdefg"; char y[] = {'a', 'b', 'c', 'd', 'e', 'f', 'g'}; 则正确的叙述为().`), ['数组x和数组y等价', '数组x和数组y的长度相同', '数组x的长度大于数组y的长度', '数组x的长度小于数组y的长度'], 3, 2], ['CQ', '在软件测试方法中，白盒测试法把程序看成是一个透明的盒子，以程序的内部结构和()为依据，对程序的所有逻辑路径进行细致的检查。', ['功能', '算法', '外部结构', '处理过程'], 4, 2], ['CQ', '狭义地讲，测试是：()。', ['指软件产品生命周期内所有的检查、 评审和确认活动。', '对软件产品功能的检查和评价。', '对软件产品质量的检验和评价。', '对软件产品是否存在bug的检验。'], 3, 5], ['CQ', '对于复杂的产品或系统来说，()是一般的原则。', ['zero - bug', 'none - bug', 'good - enough', 'best - enough'], 3, 7], ['CQ', '下列说法正确的是：()。', ['对于功能测试的效率， 主要依赖于建立测试所需数据的工作量大小。', '对于功能测试的效率， 主要依赖于应用的复杂度、 窗口的个数， 以及每个窗口中的动作数目。', '对于功能测试的效率， 主要依赖于软件编写的质量。', '对于功能测试的效率， 主要依赖于软件的逻辑复杂程度。'], 2, 8], ['CQ', '下列说法正确的是：()。', ['验收测试通常又称为单元测试', '系统测试通常又称为单元测试', '平行测试通常又称为单元测试', '模块测试通常又称为单元测试'], 4, 4], ['CQ', '下列说法正确的是:().', ['黑盒测试技术中的边界值分析在很大程度上是试探性的, 与设计者的经验有关.', '黑盒测试技术中的划分等价类在很大程度上是试探性的, 与设计者的经验有关.', '黑盒测试技术中的错误推测法在很大程度上是试探性的, 与设计者的经验有关.', '黑盒测试技术中的逻辑覆盖法在很大程度上是试探性的, 与设计者的经验有关.'], 3, 5], ['CQ', '面向对象测试中测试一组协同工作的类与对象之间的相互作用，大体相当于传统软件测试中的()。', ['单元测试', '模块测试', '子系统测试', '验证测试'], 3, 8], ['CQ', '下列说法正确的是：()。', ['错误检查又称为边界检查', '存储器填充又称为边界检查', '存储器检查又称为边界检查', '存储器访问检查又称为边界检查'], 4, 5], ['CQ', '用于防止使软件质量倒退的测试叫()。', ['计划测试', '模块测试', '回归测试', '系统测试'], 3, 1], ['CQ', '()可以告诉用户测试用例是否运行了所有代码。', ['覆盖监控', '符号调试程序', '测试记录', '系统测试'], 1, 7], ['CQ', '()是以一种有序的方式来设法探测潜在的错误位置。', ['回归测试', '验证测试', '系统化测试', '模块测试'], 3, 5], ['CQ', '软件测试的任务是()。', ['将软件需求说明转化为软件总体设计， 确定软件结构及模块的划分， 并确定各模块之间的接口。', '发现并排除软件中的错误， 最终把一个高质量的软件系统交付给用户使用。', '确定每个模块的数据结构和算法， 确定模块的细节， 具体为： 外部接口、 内部接口、 输入输出、 局部数据。', '实现人和计算机的通讯， 产生一个机器能执行的源程序。'], 2, 1], ['elem', '\n\n\n\n', [0.96, 400]] ]);