/* 2022/10/20 16:45 local_lib ver: 0.8.6 */
/* 
 * add Ajax_json_reader
 * 0.1.10 fix the problem that can't import with Q_KVM_lib.js
 * 0.2.0 代码折叠 需配合 toggle.js 使用
 * 0.2.9 修改了LM的 top,bottom 值，强化了SL的视觉效果
 * 0.2.10 修复了原先 cSharp() 中 border 导致的盒子问题，修复了上一版的 clear 功能缺失
 * 0.2.11 整改了link的样式，以及多个潜在的布局问题，删除了部分不再支持的代码
 * 0.3.0 增加了空间 space({width,height,margin})
 * 0.3.1 更改了 lst 和 tip 的默认标签，均从 h4 改为了 p
 * 0.3.1_1 互换了 lst 的 上下 margin 现： mt: 0.36rem mb: 1rem
 * 0.3.1_2 删除了 SM 过去的一条if线，修改了 img 的 box-shadow 样式
 * 0.3.2 更改了 link 的后两个参数， link(text, href, isSelf) 不再兼容此前的link全参数版本
 * 0.3.3 优化了 code 的显示效果
 * 0.4.0 新增了 hlc({text, dataAttr, later, code_type, style_name}, later, language_type)
 * 0.5.0 为 hlc 扩展了控件(复制源代码，左右滚动)
 * 0.6.0 新增 hlc title, 将左右移动的svg共用一段代码
 * 0.7.0 hlc 显示,隐藏注释
 * 0.8.0 hlc 代码 下拉/上拉
 * 0.8.1, 0.8.2 hlc tools_warp 遮罩过渡修复
 * 0.8.3 增加了 hlc 默认上拉菜单的功能
 * 0.8.4 增加了 hlc xml/html 注释匹配
 * 0.8.5 原：space(obj) 新 space(obj/string[height])
 * 优化 匹配多行注释
 */

let ud = undefined; sessionStorage.setItem('mediaStep', 0); sessionStorage.setItem('mediaArr', ''); sessionStorage.setItem('hidStep', 0); function RRN(arr) { let rn = Math.round(Math.random() + 0.1) + '.' + Math.round((Math.random() + 0.1) * 10); rn <= arr[0] ? rn = arr[1] : rn = rn + Math.round(Math.random() + 0.1); rn >= arr[2] ? rn = arr[2] : rn = rn + arr[3]; rn *= arr[4]; if (rn != rn) { rn = '0.64' } return rn; } let random_num_00 = RRN([0.72, 0.96, 1.64, -0.3, 1.2]); let random_num_01 = RRN([0.72, 0.96, 1.54, -0.3, 1.2]); let random_num_03 = RRN([0.72, 0.96, 1.64, -0.3, 1.2]); let random_num_04 = RRN([0.72, 0.96, 1.32, 0.6, 1.24]); let random_num_05 = RRN([0.72, 0.96, 1.42, -0.3, 1.2]); let random_num_07 = RRN([0.72, 0.96, 1.32, 0.3, 0.72]); function getStyle(elem) { if (elem.currentStyle) { return elem.currentStyle; } else { return getComputedStyle(elem); } } function Ajax4Json(obj) { let path = './data/data.json';; let callBack = null; if (obj != undefined) { if (obj.path != undefined) { path = obj.path; } if (obj.callBack != undefined) { callBack = obj.callBack; } } let xhr = new XMLHttpRequest(); xhr.open("get", path, true); xhr.send(null); xhr.onreadystatechange = () => { if (xhr.readyState == 4 && xhr.status == 200) { rst = JSON.parse(xhr.responseText); for (let i in rst.elemList) { eval(rst.elemList[i].fn); if (callBack != null && typeof callBack != 'string') { if (callBack.length > 1) { callBack.forEach(fn => { eval(fn); }); } else { eval(callBack); } } else { eval(callBack); } } } } } function split_p(str) { let arr = new Array; for (let i = 0; i < str.length; i++) { arr[i] = str[i]; } return arr; } let LSMn_step = 0; function objRD(obj) { if ((obj != undefined) && (typeof obj != 'String') && (obj instanceof Array) == false) { let width_height_margin_mt_mb_ml_mr = [obj.width, obj.height, obj.margin, obj.marginTop, obj.marginBottom, obj.marginLeft, obj.marginRight]; return width_height_margin_mt_mb_ml_mr; } else { return undefined; } } function topic(tex, color, bgc) { add_normalNode([format(tex, [])], ['h3', '0.128', '1rem 0 0.36rem 0rem', ud, ud, '0rem'], [ ['fontSize', '2rem'], ['js-event', 'setTimeout', '2400', 'MR', '0'], ['fontFamily', '迷你简丫丫'], ], [ ['position', 'relative'], ['zIndex', '9'], ['MT', '-12.4rem'], ['BGC', 'transparent'], ['js-event', 'setTimeout', '800', 'color', '#2233'], ['js-event', 'setTimeout', '1600', 'color', color], ['js-event', 'setTimeout', '3200', 'textShadow', '0.036rem 0.024rem 0.0128rem rgba(110, 43, 236, 0.712)'], ['whiteSpace', 'nowrap'], ['js-event', 'setTimeout', '1600', 'whiteSpace', 'normal'], ['js-event', 'setTimeout', '800', 'transition', 'all 0.46s'], ['js-event', 'setTimeout', '240', 'textAlign', 'center'], ['js-event', 'setTimeout', '800', 'MT', '2rem'], ['js-event', 'setTimeout', '400', 'BGC', bgc] ]) } function LM(tex, color, bgc) { let mt_mb = ['1rem', '0.36rem']; if (objRD(color) != undefined) { mt_mb = objRD(color); mt_mb = [mt_mb[3], mt_mb[4]]; } if (mt_mb[0] == undefined) { mt_mb[0] = '1rem'; } if (mt_mb[1] == undefined) { mt_mb[1] = '0.36rem'; } add_normalNode([format(tex, [])], ['h3', '0.128', mt_mb[0] + '0 ' + mt_mb[1] + ' 1rem', ud, ud, '0rem'], [ ['color', color], ['fontSize', '1.2rem'], ['fontFamily', '杨任东竹石体'], ['setClass', 'largeModule'], ['js-event', 'setTimeout', '6400', 'textShadow', '0.04rem 0.032rem 0.0164rem rgba(43, 236, 204, 0.712)'], ], [ ['position', 'relative'], ['left', '2rem'], ['width', 'calc(100% - 2rem)'], ['MT', '0.6rem'], ['MB', '0.6rem'], ['BGC', bgc], ['zIndex', '5'], ['ML', '100%'], ['MR', '0'], ['whiteSpace', 'nowrap'], ['js-event', 'setTimeout', '1600', 'whiteSpace', 'normal'], ['js-event', 'setTimeout', '600', 'transition', 'all ' + random_num_05 + 's'], ['js-event', 'setTimeout', '600', 'ML', '0'], ['js-event', 'setTimeout', '600', 'MR', '0'], ['addClassName', 'largeOLargeModule_' + LSMn_step], ['marginTop', mt_mb[0]], ['marginBottom', mt_mb[1]] ]); LSMn_step++ } function SM(tex, color, bgc) { let font = 'Microsoft YaHei'; let mt_mb = ['0.32rem ', '0.24rem']; if (objRD(color) != undefined) { mt_mb = objRD(color); mt_mb = [mt_mb[3], mt_mb[4]]; } if (mt_mb[0] == undefined) { mt_mb[0] = '0.32rem'; } if (mt_mb[1] == undefined) { mt_mb[1] = '0.24rem'; } add_normalNode([format(tex, [])], ['h4', mt_mb[0] + '0.064', '0 ' + mt_mb[1] + ' 0rem', ud, ud, '0rem'], [ ['color', color], ['fontFamily', font], ['setClass', 'smallModule'], ['js-event', 'setTimeout', '600', 'MR', '0'], ['js-event', 'setTimeout', '3200', 'textShadow', '0.036rem 0.024rem 0.0128rem rgba(236, 43, 210, 0.712)'], ], [ ['BGC', bgc], ['position', 'relative'], ['top', '0'], ['bottom', '0.6rem'], ['left', 4 + 2 + 'rem'], ['width', 'calc(100% - 6rem)'], ['zIndex', '4'], ['fontSize', '0.96rem'], ['ML', '100%'], ['MR', '0'], ['whiteSpace', 'nowrap'], ['js-event', 'setTimeout', '1600', 'whiteSpace', 'normal'], ['js-event', 'setTimeout', '1200', 'transition', 'all ' + random_num_00 + 's'], ['js-event', 'setTimeout', '1200', 'ML', '0'], ['js-event', 'setTimeout', '800', 'MR', '0'], ['addClassName', 'largeOLargeModule_' + LSMn_step], ['marginTop', mt_mb[0]], ['marginBottom', mt_mb[1]] ]); LSMn_step++; } function tip(tex, tab, color, bgc) { let tmp = '2rem'; let c = '#222'; color != undefined && (function () { c = color; }()); if (tab == undefined) { tab = 2; } tmp = (tab * 2 + 4) + 'rem'; let mt_mb = ['0.64rem', '0.24rem']; if (objRD(color) != undefined) { mt_mb = objRD(color); mt_mb = [mt_mb[3], mt_mb[4]]; } if (mt_mb[0] == undefined) { mt_mb[0] = '0.32rem'; } if (mt_mb[1] == undefined) { mt_mb[1] = '0.24rem'; } add_normalNode([format(tex, [])], ['p', '0.064', mt_mb[0] + '0 ' + mt_mb[1] + ' 0', ud, ud, '0rem'], [ ['color', c], ['js-event', 'setTimeout', '3200', 'textShadow', '0.024rem 0.016rem 0.0096rem rgba(251, 255, 3, 0.24)'], ], [ ['BGC', bgc], ['position', 'relative'], ['top', '0'], ['bottom', '0.6rem'], ['ML', '100%'], ['zIndex', '3'], ['fontSize', '0.66rem'], ['whiteSpace', 'nowrap'], ['js-event', 'setTimeout', '1000', 'whiteSpace', 'normal'], ['js-event', 'setTimeout', '800', 'transition', 'all ' + random_num_01 + 's'], ['js-event', 'setTimeout', '1200', 'ML', tmp], ['marginTop', mt_mb[0]], ['marginBottom', mt_mb[1]] ]); } function lst(tex, breakOff, color, ulColor, bgc, lType, tab) { let listStyleType = ['liType', 'disc']; lType != undefined && (function () { listStyleType = ['liType', lType]; }()); !color && (function () { color = '#222'; }()); ulColor == undefined && (function () { ulColor = '#000'; }()); bgc == undefined && (function () { bgc = 'transparent'; }()); if (tab == undefined) { tab = 2; } let bkoff; if (typeof breakOff != 'string') { if (breakOff != undefined) { bkoff = breakOff; } else { bkoff = 111; } } if (typeof breakOff != 'string') { if (breakOff != undefined) { if (breakOff[1]) { listStyleType = ['liType', breakOff[1]]; } else { listStyleType = ['liType', 'none']; } if (breakOff[2]) { tab = breakOff[2]; } else { tab = 2; } if (breakOff[0] != undefined) { bkoff = breakOff[0]; } else { bkoff = 111; } } else { bkoff = 111; listStyleType = ['liType', 'none']; tab = 2; } }; let mt_mb = ['0.24rem', '0.24rem']; if (objRD(color) != undefined) { mt_mb = objRD(color); mt_mb = [mt_mb[3], mt_mb[4]]; } if (mt_mb[0] == undefined) { mt_mb[0] = '0.36rem'; } if (mt_mb[1] == undefined) { mt_mb[1] = '1rem'; } add_listNode([format(tex, [])], ['p', 0, bkoff, 'decimal-leading-zero', ud, ud, mt_mb[0] + '0 ' + mt_mb[1] + ' 0rem'], [ ['color', color], ['fontSize', '0.82rem'], ['fontWeight', 800], ], [ ['position', 'relative'], ['fontSize', '0.72rem'], ['ML', (2 * tab) + 4 + 'rem'], ['color', ulColor], ['BGC', bgc], listStyleType, ], [ ['position', 'relative'], ['top', '0'], ['zIndex', '3'], ['left', 0], ['ML', '100%'], ['whiteSpace', 'nowrap'], ['width', '100%'], ['js-event', 'setTimeout', '1200', 'whiteSpace', 'normal'], ['js-event', 'setTimeout', '1300', 'transition', 'all ' + random_num_03 + 's'], ['js-event', 'setTimeout', '1600', 'ML', '0'], ['js-event', 'setTimeout', '1600', 'MT', mt_mb[0]], ['js-event', 'setTimeout', '1600', 'MB', mt_mb[1]] ]); }; function img(imgName, WH, iH) { WH == undefined && (function () { WH = '10%'; })(); localStorage.getItem('equipmentType') == 1 && (function () { WH = '80%'; }()); let idTMP; let tempNum = 'key' + sessionStorage.getItem('hidStep').toString() + '_' + (((((Math.random() * 5) + 1) * ((Math.random() * 6) + 1) * ((Math.random() * 7) + 1))) / 12).toFixed(16); sessionStorage.setItem('fgiArr', fgiArr); let gid = ['skip']; iH == 1 && (function () { gid = ['getId', tempNum]; }()); let innerValue = []; let WIH = []; let HIH = []; let fPath = []; imgName != undefined && typeof imgName != "string" && (function () { (imgName instanceof Array) == false && (function () { if (imgName.path) { fPath = ['element-attribute', 'src', '../../img/' + imgName.path]; } if (imgName.fullPath) { fPath = ['element-attribute', 'src', imgName.fullPath]; } if (imgName.innerText) { innerValue = ['innerText', imgName.innerText]; } if (imgName.innerHTML) { innerValue = ['innerHTML', imgName.innerHTML]; } if (imgName.width) { WIH = ['width', imgName.width]; } if (imgName.height) { HIH = ['height', imgName.height]; } })(); })(); add_normalNode([''], ['img', 'normal', '0.2rem 5% 3.2rem 5%'], [ ['textDecoration', 'none'], ['width', WH], ['cursor', 'default'], ['color', '#999'], ['fontSize', '0.4rem'], ['borderRadius', '1rem'], ['objectFit', 'cover'], ['transition', 'all 0.2s'], ['js-addEventListener', 'mouseleave', 'boxShadow', '-0.12rem -0.12rem 0 0 transparent'], ['js-addEventListener', 'mouseenter', 'boxShadow', '0.24rem 0.16rem 0.42rem 0.08rem rgba(128,128,128,.2)'], ['element-attribute', 'src', '../../img/' + imgName], fPath, WIH, HIH ], [ ['objectFit', 'cover'], ['display', 'flex'], ['JC', 'center'], ['position', 'relative'], ['ML', '-100%'], ['zIndex', '3'], ['padding', '0.4rem', '1.6rem'], ['width', '90%'], ['padding', '0.6rem auto'], ['borderRadius', '1rem'], ['boxShadow', '0.06rem 0.06rem 1rem 0.25rem transparent'], ['js-event', 'setTimeout', '1200', 'bottom', '0.6rem'], ['js-event', 'setTimeout', '1200', 'MT', '1.6rem'], ['js-event', 'setTimeout', '1200', 'MB', '0'], ['js-event', 'setTimeout', '1200', 'transition', 'all 0.4s'], ['js-event', 'setTimeout', '1200', 'ML', '0'], ['js-event', 'setTimeout', '1200', 'position', 'relative'], ['js-event', 'setTimeout', '1200', 'display', 'flex'], ['js-event', 'setTimeout', '1200', 'JC', 'center'], ['js-event', 'setTimeout', '1200', 'ML', '5%'], ['js-event', 'setTimeout', '3200', 'opacity', '0.9'], ['js-event', 'setTimeout', '6400', 'opacity', '1'], gid, innerValue ]); iH == 1 && (function () { idTMP = sessionStorage.getItem(tempNum + sessionStorage.getItem('randomNum')); sessionStorage.setItem('mediaArr', sessionStorage.getItem('mediaArr') + ',' + idTMP); sessionStorage.setItem('mediaArr', (sessionStorage.getItem('mediaArr').toString()).replace(/,null/g, '')); tempNum = undefined; localStorage.setItem('mediaArr', sessionStorage.getItem('mediaArr')); sessionStorage.setItem('mediaStep', parseInt(sessionStorage.getItem('mediaStep')) + 1); sessionStorage.setItem('hidSteps', parseInt(sessionStorage.getItem('hidSteps')) + 1); }()); }; function video(videoInfo, WH) { WH == undefined && (function () { WH = '10%'; })(); localStorage.getItem('equipmentType') == 1 && (function () { WH = '86%'; }()); let path = '../../media/' + videoInfo; let obj = { fullPath: '', width: '60%', height: 'auto', ctrl: true }; if (typeof videoInfo == 'object') { for (let i in videoInfo) { obj[i] = videoInfo[i]; } WH = obj.width; } if (videoInfo.fullPath) { path = videoInfo.fullPath; } let ctrl = []; if (obj.ctrl) { ctrl = ['elemAtt', 'controls', 'controls']; } add_normalNode([''], [ ['video', 'source'], ud, '0.2rem 5% 3.2rem 5%' ], [ ['elemAtt', 'type', 'video/mp4'], ['width', WH], ['cursor', 'default'], ['borderRadius', '1rem'], ['objectFit', 'cover'], ['element-attribute', 'src', path] ], [ ['elemAtt', 'loop', 'loop'], ['objectFit', 'cover'], ['elemAtt', 'muted', 'muted'], ctrl, ['display', 'flex'], ['JC', 'center'], ['position', 'relative'], ['ML', '-100%'], ['zIndex', '3'], ['padding', '0.4rem', '1.6rem'], ['width', '90%'], ['padding', '0.6rem auto'], ['borderRadius', '1rem'], ['boxShadow', '0.06rem 0.06rem 1rem 0.25rem transparent'], ['js-event', 'setTimeout', '1200', 'MT', '2.6rem'], ['js-event', 'setTimeout', '1200', 'transition', 'all ' + random_num_04 + 's'], ['js-event', 'setTimeout', '1200', 'ML', '0'], ['js-event', 'setTimeout', '1200', 'position', 'static'], ['js-event', 'setTimeout', '1200', 'display', 'flex'], ['js-event', 'setTimeout', '1200', 'JC', 'center'], ['js-event', 'setTimeout', '1200', 'ML', '5%'], ['js-event', 'setTimeout', '1200', 'width', WH], ['js-event', 'setTimeout', '3200', 'opacity', '0.9'], ['js-event', 'setTimeout', '6400', 'opacity', '1'] ]); }; function link(tex, filePath, isSelf) { let target_tab; if (!isSelf) { target_tab = '_blank'; } else { target_tab = '_self'; } let LSP = '0.2rem'; let externalPadding_LR = parseFloat(LSP) + 0.2; let link_mouseleave_boxShadow = '-0.06rem 0.032rem 0.3rem 0 rgb(149, 236, 255)'; add_normalNode([format(tex, [])], ['a', '0.2', '0.6rem 5% 0。24rem 5%', ud, ud, 'paragraph-2em'], [ ['textDecoration', 'none'], ['cursor', 'pointer'], ['color', '#999'], ['fontSize', '0.72rem'], ['LSP', '12.8rem'], ['element-attribute', 'href', filePath], ['elemAtt', 'target', target_tab], ['BGC', 'transparent'], ['color', 'transparent'], ['textAlign', 'center'], ['margin', 0], ['fontWeight', '800'], ['setClass', 'link2webOrFile'], ['borderRadius', '1rem 0 0 1rem'], ['js-event', 'setTimeout', '1600', 'transition', 'all 0.32s'], ['js-event', 'setTimeout', '2200', 'color', '#000'], ['js-event', 'setTimeout', '2200', 'textShadow', '0.06rem 0.06rem 0.32rem rgba(227, 38, 221, 0.64)'], ['js-event', 'setTimeout', '2200', 'boxShadow', link_mouseleave_boxShadow], ['js-event', 'setTimeout', '2300', 'TID', 0], ['js-event', 'setTimeout', '2300', 'LSP', '0.06rem'], ['js-event', 'setTimeout', '2400', 'fontWeight', '800'], ['js-event', 'setTimeout', '2400', 'padding', '0.54rem 7.2rem'], ['js-event', 'setTimeout', '2400', 'BGC', 'transparent'], ['js-addEventListener', 'mouseenter', 'padding', '0.54rem ' + (7.2 - externalPadding_LR * 2) + 'rem'], ['js-addEventListener', 'mouseleave', 'padding', '0.54rem 7.2rem'], ['js-addEventListener', 'mouseenter', 'boxShadow', '0 0 0 transparent'], ['js-addEventListener', 'mouseleave', 'boxShadow', link_mouseleave_boxShadow], ], [ ['position', 'relative'], ['top', '0'], ['bottom', '0'], ['MB', '0.6rem'], ['MT', '0.6rem'], ['display', 'block'], ['transition', 'all 0.64s'], ['borderRadius', '1rem 0 0 1rem'], ['boxShadow', '0 0 0 transparent'], ['js-addEventListener', 'mouseenter', 'boxShadow', '0.6rem 0.4rem 0.64rem 0.06rem rgba(54, 54, 54,0.32)'], ['js-addEventListener', 'mouseleave', 'boxShadow', '0 0 0 transparent'], ['BGC', 'transparent'], ['color', 'transparent'], ['whiteSpace', 'nowrap'], ['js-event', 'setTimeout', '2400', 'whiteSpace', 'normal'], ['js-event', 'setTimeout', '1200', 'transition', 'all 0.42s'], ['js-event', 'setTimeout', '2600', 'ML', '5%'], ['js-event', 'setTimeout', '2400', 'color', 'transparent'], ['js-event', 'setTimeout', '2400', 'BGC', 'transparent'] ]); }; function SL(top, bottom) { let up = '0.72rem'; let down = '2.4rem '; top && (function () { up = top; })(); bottom && (function () { down = bottom; })(); let tex = '-----------------------华丽的分割线-----------------------'; let space = 0.16; if (localStorage.getItem('equipmentType') == 1) { tex = '----------------华丽的分割线----------------'; space = 0.032; } add_normalNode([format(tex, [])], ['h4', space, up + ' 0 ' + down + ' 0', 'SplitLine', 'rgba(255, 255, 255, 0.128)', '0.25rem'], [ ['[tex]tAlign', 'center'], ['BGC', 'transparent'], ['color', 'transparent'], ['LSP', '1rem'], ['setClass', 'splitLine'], ['js-event', 'setTimeout', '800', 'LSP', '0.1rem'], ['js-event', 'setTimeout', '800', 'BGC', 'transparent'], ['js-event', 'setTimeout', '800', 'color', '#f1afa0'], ['js-event', 'setTimeout', '2400', 'transition', 'all ' + random_num_03 + 's'] ], [ ['textAlign', 'center'], ['BGC', 'transparent'], ['color', 'transparent'], ['MT', up], ['MB', down], ['whiteSpace', 'nowrap'], ['js-event', 'setTimeout', '800', 'whiteSpace', 'normal'], ['js-event', 'setTimeout', '600', 'transition', 'all ' + random_num_07 + 's'], ['js-event', 'setTimeout', '700', 'ML', '-5%'], ['js-event', 'setTimeout', '800', 'color', '#f1afa0'], ['js-event', 'setTimeout', '800', 'BGI', 'linear-gradient(to right,transparent,rgba(216,126,255,.06) 50%,transparent)'], ]); }; function space(para) { let obj = { width: '100%', height: '2.4rem', margin: 0 }; if (typeof para == 'string') { obj.height = para; } else { for (let k in para) { obj[k] = para[k]; } } add_normalNode([''], ['div', 0, obj.margin, 'content_space'], [], [ ['width', obj.width], ['height', obj.height] ]); } let hf = parseFloat(document.documentElement.style.fontSize); let cf = hf * 0.46; let hidStep = 0; let hidTex = new Array(); sessionStorage.setItem('hadAddPWDElemTOCopyCodeCorrectly_by_' + document.querySelector('title').innerText + '__' + random_num_00 + '__' + random_num_01, random_num_03 + random_num_04 * random_num_05); sessionStorage.setItem('gIndex', 0); let codeWrap_step = 0; let cid_arr = []; function code(dft_tex, breakOff, position, tab, hide, obj) { let dft_obj = { text: '在此输入你的代码\ncode your code here', dataAttr: '点击查看代码', sf: false, later: true, re: false, clear: false, code_ani: false }; let ajax_req = false; let dataAttr = '点击查看代码'; let space_format = true; let tex = dft_tex.text == undefined ? dft_tex : dft_tex.text; let c_ani_01 = ['js-AEL', 'mouseenter', 'PL', '1.2rem']; let c_ani_02 = ['js-AEL', 'mouseenter', 'JSBuild', `window.codeFontColorArr=[]; let codeArr_temp=this.childNodes; for(let i=0;i<codeArr_temp.length;i++){ if(codeArr_temp[i]!= undefined){ codeFontColorArr[i]=codeArr_temp[i].style.color; codeArr_temp[i].style.backgroundColor="transparent"; codeArr_temp[i].style.color='#fff'; codeArr_temp[i].style.textShadow="0.04rem 0.04rem 0.032rem red";}}`]; let c_ani_03 = ['js-AEL', 'mouseleave', 'JSBuild', `for (let i=0;i<this.childNodes.length;i++){ if (this.childNodes[i]!= undefined){ this.childNodes[i].style.textShadow="none"; this.childNodes[i].style.color=codeFontColorArr[i]; this.childNodes[i].style.backgroundColor="transparent";}}`]; if (dft_tex.constructor === Object) { for (let key in dft_tex) { dft_obj[key] = dft_tex[key]; } dataAttr = dft_obj.dataAttr; space_format = dft_obj.sf; ajax_req = dft_obj.later; if (!dft_obj.code_ani) { c_ani_01 = []; } if (dft_obj.clear) { c_ani_02 = []; c_ani_03 = []; } } let tempNum = 'key' + sessionStorage.getItem('hidStep').toString() + '_' + (((((Math.random() * 5) + 1) * ((Math.random() * 6) + 1) * ((Math.random() * 7) + 1))) / 12).toFixed(16); let gid = ['skip']; let rawData = tex; if (hide == 1) { hidTex[hidStep] = tex; tex = ['']; dpy = 'none'; hidStep++; } else if (hide == 'ch') { gid = ['getId', tempNum]; dpy = 'block'; } else { dpy = 'block'; } if (breakOff == undefined) { breakOff = 111; } if (position == undefined) { position = 0.32; } if (tab == undefined) { tab = 1; } if (typeof rawData == 'string') { let temp = tex.split('\n'); for (let i = 0; i < temp.length; i++) { if (breakOff == 111) { switch (i) { case 0: /* 第一行 */ code({ text: [temp[i]], dataAttr: dataAttr, sf: space_format, later: dft_tex.later, clear: dft_tex.clear, code_ani: dft_obj.code_ani, re: false }, 111, position, tab, hide, obj); break; default: code({ text: [temp[i]], dataAttr: dataAttr, sf: space_format, later: dft_tex.later, clear: dft_tex.clear, code_ani: dft_obj.code_ani, re: true }, 0, position, tab, hide, obj); break; } } else { code({ text: [temp[i]], dataAttr: dataAttr, sf: space_format, later: dft_tex.later, clear: dft_tex.clear, code_ani: dft_obj.code_ani, re: true }, breakOff, position, tab, hide, obj); } } } let tmp_c = '#fff'; if (tex == undefined) { console.warn('error: 字符传入异常'); } if (tex.toString().substring(0, 2) == '//') { tmp_c = '#95c176'; } tex = tex.toString().replace(/</g, '&lt;'); tex = tex.toString().replace(/>/g, '&gt;'); let tmp_tex = []; tmp_tex[0] = tex; let finTex; /* 经过一番修改，现在 sf=false 反而是最美观的 */ if (space_format) { finTex = tmp_tex[0].split(' '); } else { finTex = [tmp_tex[0].replace(/[\s]/g, "⁣⁣⁣⁣")]; } let phoneStyle_000 = ['skip']; let phoneStyle_001 = ['skip']; let phoneStyle_002 = ['width', '90%']; let phoneStyle_003 = ['skip']; if (localStorage.getItem('equipmentType') == 1) { phoneStyle_000 = ['PL', '2.4rem']; phoneStyle_001 = ['left', document.body.clientWidth * 0.05 + 'px']; phoneStyle_002 = ['width', document.body.clientWidth * 0.9 + 'px']; phoneStyle_003 = ['minWidth', '0']; } let parJsListener1 = ['js-addEventListener', 'mouseenter', 'boxShadow', '0.06rem 0.04rem 0.2rem 0.1rem rgba(36, 39, 46, .9)']; let parJsListener2 = ['js-addEventListener', 'mouseenter', 'BF', 'blur(1rem)']; let parJsListener3 = ['js-addEventListener', 'mouseleave', 'boxShadow', '-0.1rem -0.1rem 0 0 transparent']; let parJsListener4 = ['js-addEventListener', 'mouseleave', 'BF', 'blur(0rem)']; let parJsListener5 = ['js-AEL', 'mouseenter', 'BGC', '#292a36']; let parJsListener6 = ['js-AEL', 'mouseenter', 'overflow', 'hidden']; let parJsListener7 = ['js-AEL', 'mouseleave', 'BGC', 'rgb(36, 39, 46)']; let parJsListener8 = ['js-AEL', 'mouseleave', 'overflow', 'auto']; let parJsListener9 = ['js-AEL', 'mouseleave', 'overflowX', 'hidden']; let son_CodeNode_jc1 = []; let son_CodeNode_jc2 = ['elemAtt', 'onmouseleave', "this.style.backgroundColor = 'transparent'"]; let li_BGI_1 = ['js-AEL', 'mouseenter', 'BGI', 'linear-gradient(to right, #2d2f3d,96%,transparent)']; let li_color = ['js-event', 'setTimeout', '2000', 'color', '#5f647a']; let li_JES_1 = ['js-AEL', 'click', 'color', '#fff']; let li_JES_2 = ['js-AEL', 'click', 'js-event', 'setTimeout', '300', 'color', '#455162']; let li_JES_3 = ['js-AEL', 'mouseenter', 'color', '#c79c65']; let li_JES_4 = ['js-AEL', 'mouseleave', 'color', '#5f647a']; let li_JES_5 = ['js-AEL', 'mouseenter', 'border', 'none']; let li_JES_6 = ['js-AEL', 'mouseleave', 'border', 'none']; let li_JES_7 = ['border', 'none']; let bgc01 = ['js-event', 'setTimeout', '800', 'BGC', 'rgb(36, 39, 46)']; let addClassName = ['addClass', 'codeNodes_addBy_funCode']; obj != undefined && (function () { (obj instanceof Array) == false && (function () { parJsListener5 = []; parJsListener7 = []; son_CodeNode_jc1 = []; son_CodeNode_jc2 = []; li_BGI_1 = ['js-AEL', 'mouseenter', 'BGI', obj.li_mEnterBGI]; tmp_c = obj.norColor; bgc01 = ['BGC', obj.norBGC]; obj.callFn; addClassName = ['addClass', obj.son_codeNodeClassName]; li_color = ['js-event', 'setTimeout', '2000', 'color', obj.li_norColor]; li_JES_1 = ['js-AEL', 'click', 'color', obj.li_clickColor]; li_JES_2 = ['js-AEL', 'click', 'js-event', 'setTimeout', '300', 'color', obj.li_clickColor_setTimeout]; li_JES_3 = ['js-AEL', 'mouseenter', 'color', obj.li_mEnterColor]; li_JES_4 = ['js-AEL', 'mouseleave', 'color', obj.li_mLeaveColor]; li_JES_5 = ['js-AEL', 'mouseenter', 'border', obj.li_mEnterBorder]; li_JES_6 = ['js-AEL', 'mouseleave', 'border', obj.li_mLeaveBorder]; li_JES_7 = ['border', obj.li_mLeaveBorder]; parJsListener1 = ['js-addEventListener', 'mouseenter', 'boxShadow', obj.ulShadow]; })(); }()); if (typeof rawData != 'string') { /* 需要修正 need fix */ /* ?cid=code_ctr_1&cid=code_ctr_3,code_ctr_4,code_ctr_5 */ if (!dft_tex.re && ajax_req) { if (!sessionStorage.getItem('sp_id_step')) { sessionStorage.setItem('sp_id_step', 1) } else { sessionStorage.setItem('sp_id_step', parseInt(sessionStorage.getItem('sp_id_step')) + 1) } let id = 'code_ctr_' + sessionStorage.getItem('sp_id_step'); cid_arr.push(id); addUrlPara('cid', cid_arr); } add_listNode(finTex, ['code', ['0.64em'], breakOff, 'decimal-leading-zero', 'codeDoneByList', ud, '0.24rem 0 0.24rem 0rem', 'paragraph-' + 0.64 * 4 * tab + 'em'], [ ['fontSize', '0.64rem'], ['fontWeight', 400], ['fontFamily', 'Amaranth'], ['LSP', '0.12rem'], ['color', 'rgb(220, 220, 220)'], addClassName, ['elemAtt', 'gIndex', sessionStorage.getItem('gIndex')], ['JSBuild', "sessionStorage.setItem('gIndex', parseInt(sessionStorage.getItem('gIndex')) + 1)"], ['display', 'none'], ['borderRadius', '1rem'], ['js-event', 'setTimeout', '400', 'display', 'inline-block'], ['js-event', 'setTimeout', '1200', 'transition', 'all 0.12s'], ['js-event', 'setTimeout', '2000', 'color', tmp_c], ['addClass', 'codeNodes_addBy_localLib'], son_CodeNode_jc1, son_CodeNode_jc2 ], [ ['position', 'relative'], ['left', position * 4 + 'rem'], ['fontSize', '0.64rem'], ['fontWeight', 400], ['color', 'transparent'], ['borderRadius', '0.6rem 0 0 0.6rem'], ['js-event', 'setTimeout', '1200', 'transition', 'all 0.24s'], ['js-AEL', 'mouseleave', 'BGI', 'none'], ['boxSizing', 'content-box'], li_color, li_BGI_1, li_JES_1, li_JES_2, li_JES_3, li_JES_4, li_JES_5, li_JES_6, li_JES_7, c_ani_01, c_ani_02, c_ani_03, ['js-AEL', 'mouseleave', 'PL', '0'] ], [ ['position', 'relative'], ['top', '2rem'], ['bottom', '2rem'], ['left', '5%'], ['padding', '0.24rem'], ['borderRadius', '0.64rem'], ['zIndex', '4'], ['fontSize', '0.64rem'], ['fontWeight', 400], ['BGC', 'transparent'], ['color', 'transparent'], ['width', '90%'], ['minWidth', window.screen.availWidth * 0.36 + 'px'], ['display', 'none'], ['BF', 'blur(0rem)'], /* ['JSBuild', 'console.log(this.id)'], */ ['whiteSpace', 'normal'], ['addClass', 'code_wrap'], ['elemAtt', 'data-name', dataAttr], ['JSBuild', 'this.dataset.toggle=' + dft_tex.later], ['js-event', 'setTimeout', '600', 'transition', 'all 0.46s'], bgc01, ['js-event', 'setTimeout', '800', 'display', dpy], ['js-event', 'setTimeout', '800', 'top', '0'], ['js-event', 'setTimeout', '800', 'bottom', '0'], ['js-event', 'setTimeout', '1800', 'MT', '0.8rem'], ['js-event', 'setTimeout', '1800', 'MB', '1.2rem'], parJsListener1, parJsListener2, parJsListener3, parJsListener4, parJsListener5, parJsListener6, parJsListener7, parJsListener8, parJsListener9, phoneStyle_000, phoneStyle_001, phoneStyle_002, phoneStyle_003, gid, ['addClass', 'code_ctr_' + sessionStorage.getItem('sp_id_step')] ]); } hide == 'ch' && (function () { idTMP = sessionStorage.getItem(tempNum + sessionStorage.getItem('randomNum')); sessionStorage.setItem('mediaArr', sessionStorage.getItem('mediaArr') + ',' + idTMP); sessionStorage.setItem('mediaArr', (sessionStorage.getItem('mediaArr').toString()).replace(/,null/g, '')); tempNum = undefined; localStorage.setItem('mediaArr', sessionStorage.getItem('mediaArr')); sessionStorage.setItem('mediaStep', parseInt(sessionStorage.getItem('mediaStep')) + 1); sessionStorage.setItem('hidSteps', parseInt(sessionStorage.getItem('hidSteps')) + 1); }()); rawData = undefined; }; function cmd(tex, breakOff, position, tab, hide) { code(tex, breakOff, position, tab, hide, { type: 'cmd', norColor: '#fff', norBGC: '#24272e', fnColor: '#e3a75c', fnBGC: '#24272e', son_clickBGC: '', son_clickColor: '', li_norColor: '#4b5162', li_clickColor: '#fff', li_clickColor_setTimeout: '#0cffda', li_mEnterColor: '#acb2b1', li_mEnterBGC: '', li_mEnterBGI: 'linear-gradient(to right, #681c98, 12%, transparent, 98%, rgba(255, 255, 255, 0.1))', li_mLeaveColor: '#4b5162', li_mLeaveBGC: '', li_mLeaveBGI: '', li_mEnterBorder: 'none', li_mLeaveBorder: 'none', ulShadow: '0.06rem 0.04rem 0.2rem 0.1rem rgba(36, 39, 46, .9)', son_codeNodeClassName: 'codeNodes_cmd_addBy_funCode', callFn: '' }); } function tArea(tex, breakOff, position, tab, hide) { code(tex, breakOff, position, tab, hide, { type: 'text', norColor: '#000', norBGC: '#fff', fnColor: '#000', fnBGC: '#fff', son_clickBGC: '', son_clickColor: '', li_norColor: '#d8dcff', li_clickColor: '#000', li_clickColor_setTimeout: '#ff8267', li_mEnterColor: '#24272e', li_mEnterBGC: '', li_mEnterBGI: 'linear-gradient(to right, rgba(0, 229, 255, 0.12), 12%, transparent, 99.9%, rgba(0, 0, 0, 0.1))', li_mLeaveColor: '#d8dcff', li_mLeaveBGC: '', li_mLeaveBGI: '', li_mEnterBorder: 'none', li_mLeaveBorder: 'none', ulShadow: '0.1rem 0.08rem 0.16rem 0.06rem rgba(120, 174, 240, .3)', son_codeNodeClassName: 'codeNodes_tArea_addBy_funCode', callFn: '' }); } function cSharp(tex, breakOff, position, tab, hide) { code(tex, breakOff, position, tab, hide, { type: 'text', norColor: '#dcdcdc', norBGC: '#1e1e1e', fnColor: '#dcdcdc', fnBGC: '#1e1e1e', son_clickBGC: '', son_clickColor: '', li_norColor: '#31b0d5', li_clickColor: '#31b0d5', li_clickColor_setTimeout: '#fff', li_mEnterColor: '#d8dcff', li_mEnterBGC: '', li_mEnterBGI: 'linear-gradient(to right, rgba(0, 229, 255, 0.12), 12%, transparent, 99.9%, rgba(0, 0, 0, 0.1))', li_mLeaveColor: '#31b0d5', li_mEnterBorder: '0.06rem solid #464646', li_mLeaveBorder: '0.06rem solid transparent', li_mLeaveBGC: '', li_mLeaveBGI: '', ulShadow: '0.06rem 0.04rem 0.2rem 0.1rem rgba(36, 39, 46, .9)', son_codeNodeClassName: 'codeNodes_cSharp_addBy_funCode', callFn: '' }); } let hlCid_step = 0; function hlc(para, later, language_type) { let dft_obj = { text: '在此传入你的代码\ntype your code here', dataAttr: '点击查看代码', later: false, code_type: 'HTML', style_name: 'base16/onedark.min', code_tit: '', delete_annotation: false, code_stow: false }; if (language_type) { dft_obj.code_type = language_type; } let code_wrap = document.createElement('pre'); let code_label = document.createElement('code'); let code_list_marker_wrap = document.createElement('ul'); let code_display = document.createElement('div'); code_display.className = 'hlc_display'; code_wrap.id = 'hl_code_' + hlCid_step; code_wrap.className = 'hl_code ' + dft_obj.code_type; code_label.className = 'code_content'; code_list_marker_wrap.className = 'code_list_marker_wrap'; if (typeof para == 'string') { dft_obj.text = para; } else { for (let i in para) { dft_obj[i] = para[i]; } } if (later || dft_obj.later) { code_wrap.dataset.toggle = true; code_wrap.dataset.name = dft_obj.dataAttr; } code_write(dft_obj.text); function code_write(strPara) { code_writein(strPara); code_display.appendChild(code_label); code_wrap.appendChild(code_display); hlCid_step++; } function code_writein(str) { str = str.replace(/\(/g, ' ('); str = str.replace(/  \(/g, ' ('); /* str = encodeURI(str); */ if (dft_obj.delete_annotation) { str = str.replace(/\s{2,}\/\/[\s\S]*?\n/g, '\n'); str = str.replace(/\s{2,}\/\*(\s|.)*?\*\/*?\n/g, '\n'); str = str.replace(/\/\*(\s|.)*?\*\/*?\n/g, '\n'); str = str.replace(/\/\/[\s\S]*?\n/g, '\n'); str = str.replace(/<!-[\s\S]*?-->*?\n\s{2,}/g, ''); str = str.replace(/\n{2,}/g, '\n'); } str = str.replace(/\>/g, '&gt;'); str = str.replace(/\</g, '&lt;'); code_label.innerHTML = ''; code_label.innerHTML = str; } document.body.appendChild(code_wrap); code_display.appendChild(code_list_marker_wrap); code_wrap.appendChild(code_display); add_mark(); add_ctrl(); function add_mark() { let rows = code_label.innerText.split('\n'); code_list_marker_wrap.innerHTML = ''; for (let i in rows) { let li_marker = document.createElement('li'); li_marker.className = 'code_list_marker listNode'; li_marker.innerHTML = parseInt(i) + 1; code_list_marker_wrap.appendChild(li_marker) } hljs.highlightElement(code_label); /* hljs.highlightAll(); */ /* hljs.initHighlighting(); */ } function add_ctrl() { let tools_wrap = document.createElement('div'); let tools_main = document.createElement('div'); let shadow_bottom = document.createElement('div'); tools_main.className = 'hlcTools_main'; tools_wrap.className = 'hlc_tools'; tools_wrap.appendChild(tools_main); code_wrap.appendChild(tools_wrap); code_wrap.insertBefore(tools_wrap, code_display); { tools_wrap.appendChild(shadow_bottom); shadow_bottom.className = 'hlcTools_shadow_bottom'; window.addEventListener('load', () => { shadow_bottom.style.backgroundImage = `linear-gradient(to top, ${getStyle(code_label).backgroundColor} 40%, transparent)`; }) } { let scroll_ctrl_wrap = document.createElement('div'); tools_main.appendChild(scroll_ctrl_wrap); scroll_ctrl_wrap.className = 'hlcTools_scroll_ctrl_wrap'; { let _s_left = document.createElement('span'); let _s_right = document.createElement('span'); let dir_svgcode = '<svg class="selectUnable hlcTool_scrollCtrl_icon" style="transform: rotateY(0);" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2284" xmlns:xlink="http://www.w3.org/1999/xlink"> <path d="M512 960c-247.039484 0-448-200.960516-448-448S264.960516 64 512 64 960 264.960516 960 512 759.039484 960 512 960zM512 128c-211.744443 0-384 172.255557-384 384s172.255557 384 384 384 384-172.255557 384-384S723.744443 128 512 128z" p-id="2285"></path> <path d="M290.367854 524.352748c0.032684 0.127295 0.192662 0.25631 0.25631 0.383604 1.536138 3.615858 3.648542 7.071738 6.591802 10.047682 0.032684 0.032684 0.063647 0.032684 0.096331 0.063647s0.032684 0.063647 0.063647 0.096331l158.911974 159.359226c12.480043 12.512727 32.704421 12.576374 45.248112 0.063647 12.512727-12.480043 12.54369-32.704421 0.063647-45.248112l-103.327187-103.616181 305.056632 0c17.664722 0 31.99914-14.336138 31.99914-32.00086s-14.336138-32.00086-31.99914-32.00086L396.576374 481.500874l106.112189-104.959656c12.576374-12.447359 12.672705-32.671738 0.25631-45.248112-6.240882-6.335493-14.496116-9.504099-22.751351-9.504099-8.12794 0-16.25588 3.103239-22.496761 9.247789l-160.25545 158.495686C288.00086 498.912727 285.632146 512.703561 290.367854 524.352748z" p-id="2286"></path> </svg>'; _s_left.innerHTML = dir_svgcode; _s_right.innerHTML = dir_svgcode.replace('rotateY(0)', 'rotateY(180deg)'); if (!dft_obj.code_tit == '') { scroll_ctrl_wrap.style.right = '16%'; } scroll_ctrl_wrap.appendChild(_s_left); scroll_ctrl_wrap.appendChild(_s_right); let timeStart, timeEnd, time; function getTimeNow() { let now = new Date(); return now.getTime(); } function holdDown(left) { timeStart = getTimeNow(); time = setInterval(() => { codeWrap_scroll(left); timeEnd = getTimeNow(); if (timeEnd - timeStart > 1000) { clearInterval(time); } }, 10); } function holdUp() { clearInterval(time); } _s_right.onmousedown = () => { holdDown(); }; _s_right.ontouchstart = () => { holdDown(); }; _s_right.onmouseup = () => { holdUp(); }; _s_right.ontouchend = () => { holdUp(); }; _s_left.onmousedown = () => { holdDown(true); }; _s_left.ontouchstart = () => { holdDown(true); }; _s_left.onmouseup = () => { holdUp(true); }; _s_left.ontouchend = () => { holdUp(true); }; function codeWrap_scroll(left) { let step = 10; step = left ? -step : step; code_label.scrollLeft += step; } } } { let code_copier_wrap = document.createElement('div'); let textArea = document.createElement('textarea'); let copy_btn = document.createElement('span'); copy_btn.innerHTML = '复制源代码'; copy_btn.className = 'copy_btn'; textArea.className = 'code_source'; textArea.innerHTML = dft_obj.text; code_copier_wrap.appendChild(copy_btn); code_copier_wrap.appendChild(textArea); tools_main.appendChild(code_copier_wrap); code_copier_wrap.className = 'hlcTools_code_copier selectUnable'; if (dft_obj.code_tit == '') { code_copier_wrap.style.left = '32%'; } copy_btn.onclick = () => { textArea.select(); document.execCommand("copy"); copy_btn.innerHTML = '已复制源码'; setTimeout(() => { copy_btn.innerHTML = '复制源代码'; }, 600); } } { let code_type_msg = document.createElement('h2'); code_type_msg.className = 'hlcInfo selectUnable'; code_type_msg.innerHTML = '代码语言: ' + dft_obj.code_type; tools_main.appendChild(code_type_msg); } { let code_title_wrap = document.createElement('div'); let code_title = document.createElement('cite'); code_title_wrap.className = 'hlcTitle_wrap'; code_title.innerHTML = dft_obj.code_tit; code_title_wrap.appendChild(code_title); tools_main.appendChild(code_title_wrap); let tit_eclass = 'hlcTitle_short'; let val = dft_obj.code_tit.length; if (val <= 16) { tit_eclass = 'hlcTitle_short'; } else if (val <= 36) { tit_eclass = 'hlcTitle_normal'; } else if (val <= 72) { tit_eclass = 'hlcTitle_longer'; } else { tit_eclass = 'hlcTitle_overLength'; } code_title.className = 'hlc_title ' + tit_eclass; } { let hlcAtn_ctrl = document.createElement('button'); let name = document.createElement('p'); let hlcAtnBtn_ctrl = document.createElement('span'); hlcAtn_ctrl.className = 'selectUnable hlcAtn_ctrl'; hlcAtnBtn_ctrl.className = 'hlcAtnBtn_ctrl'; hlcAtnBtn_ctrl.innerHTML = '>'; btn_change(); hlcAtn_ctrl.onclick = () => { dft_obj.delete_annotation = !dft_obj.delete_annotation; btn_change(); code_writein(dft_obj.text); add_mark(); }; hlcAtnBtn_ctrl.onmouseenter = () => { hlcAtn_ctrl.style.top = 0; hlcAtnBtn_ctrl.style.color = 'transparent'; }; hlcAtn_ctrl.onmouseenter = () => { hlcAtn_ctrl.style.top = 0; hlcAtnBtn_ctrl.style.color = 'rgba(95, 95, 95, 0.3)'; }; hlcAtn_ctrl.onmouseleave = () => { hlcAtn_ctrl.style.top = '-2.49rem'; hlcAtnBtn_ctrl.style.color = 'rgba(95, 95, 95, 0.3)'; }; function btn_change() { name.innerHTML = dft_obj.delete_annotation ? '显示注释' : '隐藏注释'; tools_wrap.style.zIndex = dft_obj.delete_annotation ? 10 : 0; } hlcAtn_ctrl.appendChild(name); hlcAtn_ctrl.appendChild(hlcAtnBtn_ctrl); tools_main.appendChild(hlcAtn_ctrl); } { let scroll_btn = document.createElement('botton'); scroll_btn.className = 'hlc_slider_ctrl selectUnable'; scroll_btn.innerHTML = '上拉代码 ↑'; tools_main.appendChild(scroll_btn); code_display.style.marginTop = 0; if (dft_obj.code_tit == '') { scroll_btn.style.right = '74%'; } let timer_stop = false; scroll_btn.addEventListener('click', () => { dft_obj.code_stow = !dft_obj.code_stow; timer_stop = true; scroll(); }); (() => { let tgt = 0; let time = 0; let tmr = setInterval(() => { scroll(-code_display.clientHeight); if (tgt == code_display.clientHeight) { if (timer_stop || time >= 16) { clearInterval(tmr) } } else { time = 0; tgt = code_display.clientHeight; } }, 20) })(); function scroll(t) { let target = -code_display.clientHeight; if (t != undefined) { target = t; } if (dft_obj.code_stow) { anim(code_display, target); scroll_btn.innerHTML = '下拉代码 ↓'; code_display.className = 'hlc_display hlc_stow'; tools_wrap.style.borderRadius = '1em'; shadow_bottom.style.opacity = 0; } else { anim(code_display, 0); code_display.className = 'hlc_display'; scroll_btn.innerHTML = '上拉代码 ↑'; tools_wrap.style.borderRadius = '1em 1em 0 0'; } } function anim(obj, target) { clearInterval(obj.timer); obj.timer = setInterval(() => { let current = parseFloat(obj.style.marginTop); let step; step = Math.abs((current - target) / 4); step = current < target ? step : -step; step = step > 0 ? Math.ceil(step) : Math.floor(step); step += current; obj.style.marginTop = step + 'px'; if (current == target) { clearInterval(obj.timer); shadow_bottom.style.opacity = dft_obj.code_stow ? 0 : 1; } else if (Math.abs(current) >= Math.abs(target * 0.7)) { obj.style.opacity = dft_obj.code_stow ? 0 : 1; } }, 15); } } } add_styleLink('code_module_normalize', '/notes/rsc/lib/highlight.js/user_styles/normalize.css', 'css'); add_styleLink('code_style', '/notes/rsc/lib/highlight.js/styles/' + dft_obj.style_name + '.css', 'css'); } function add_styleLink(className, href, nodeType) { if (!document.head.querySelector('.' + className)) { if (nodeType == 'js') { let script = document.createElement('script'); script.src = href; script.className = className; document.head.appendChild(script); } else if (nodeType == 'css') { let link = document.createElement('link'); link.rel = 'stylesheet'; link.href = href; link.className = className; document.head.appendChild(link); } } } function IH(filePath, ht, mgn) { let h = '24rem'; ht && (function () { h = ht; })(); let m = '0.96rem 5% 0.24rem 5%'; mgn && (function () { m = mgn; })(); add_normalNode([], [ ['iframe'], '0.2', m, ud, ud, 'paragraph-2em' ], [], [ ['width', '90%'], ['height', h], ['padding', '0.1rem auto'], ['element-attribute', 'src', filePath], ['BGC', 'transparent'], ['color', 'transparent'], ['margin', 0], ['js-style', 'fontPosition', 'center-middle'], ['js-event', 'setTimeout', '2400', 'transition', 'all ' + random_num_07 + 's'], ['padding', '0.4rem', '1.6rem'], ['js-event', 'setTimeout', '800', 'BGC', 'transparent'], ['js-event', 'setTimeout', '800', 'margin', m], ['js-event', 'setTimeout', '800', 'ML', '5%'] ]) } let IdxS = 0; function IDX(breakOff, position, tab, type) { /* type == 0 大目录 type == 1 小目录 */ let label = 'h4'; let tb = 1; type != undefined && (function () { type == 0 && (function () { label = 'h3'; })(); })(); tab && (function () { tb = tab; })(); let tgtCn = 'largeOLargeModule_' + IdxS; let tex = document.querySelector(tgtCn).innerText; add_listNode(tex.split(' '), [label, ['0.64em'], breakOff, 'decimal-leading-zero', 'codeDoneByList', ud, '0.24rem 0 0.24rem 0rem', 'paragraph-2em' + 0.64 * 4 * tb + 'em'], [ ['fontSize', '0.64rem'], ['fontWeight', 400], ['position', 'relative'], ['left', position * 4 + 'rem'], ['fontFamily', 'Amaranth'], ['LSP', '0.12rem'], ['color', 'transparent'], ['display', 'none'], ['js-event', 'setTimeout', '800', 'display', 'inline-block'], ['js-event', 'setTimeout', '800', 'color', 'black'], ['js-event', 'setTimeout', '1000', 'transition', 'all 0.3s'], ['boxSizing', 'border-box'] ], [ ['fontSize', '0.64rem'], ['fontWeight', 400], ['color', 'transparent'], ['js-event', 'setTimeout', '1200', 'transition', 'all 0.36s'], ['js-event', 'setTimeout', '1600', 'color', '#5f647a'], ['js-event', 'setTimeout', 'js-style', 'fontPosition', 'center-middle'], ['boxSizing', 'border-box'] ], [ ['position', 'relative'], ['top', '2rem'], ['bottom', '2rem'], ['margin-bottom', '2rem'], ['left', '5%'], ['padding', '0.24rem'], ['borderRadius', '0.64rem'], ['zIndex', '-1'], ['fontSize', '0.64rem'], ['fontWeight', 400], ['BGC', 'transparent'], ['color', 'transparent'], ['width', '90%'], ['minWidth', window.screen.availWidth * 0.36 + 'px'], ['BF', 'blur(0rem)'], ['boxSizing', 'border-box'], ['whiteSpace', 'normal'], ['JSBuild', 'scrollToTarget(this, document.querySelector("' + tgtCn + '"))'], ['JSBuild', 'this.style.lineHeight = ' + '"1rem"'], ['JSBuild', 'this.style.lineHight = this.clientHeight + ' + '"px"'], ['JSBuild', 'this.style.lineHeight = ' + '"1rem"'] ]); IdxS++; } localStorage.getItem('lqLm_worn') == undefined && (function () { localStorage.setItem("lqLm_worn", '1'); })(); function SpriteMap() { var liHead = document.getElementById('headChoose').querySelectorAll('li'); for (var i = 0; i < liHead.length; i++) { var index = i * 100; liHead[i].style.backgroundPosition = '0 -' + index + 'px'; liHead[i].setAttribute('index', i); liHead[i].onclick = function () { var indexC = this.getAttribute('index'); var indexD = Number(indexC) + 1; var iC = indexD < 10 ? '0' + indexD : indexD; uH.innerHTML = '<img src="../img/User@64px/UH' + iC + '.jpg" alt="" width="100%">'; } } }; /* 禁止拖动元素 */ document.ondragstart = function () { return false; }; window.addEventListener('load', function () { let s = document.createElement('style'); s.innerText += ' img, video { -moz-user-select: none; -webkit-user-select: none; user-select: none; }'; document.querySelectorAll('head')[0].appendChild(s); for (let iv = 0; iv < document.querySelectorAll('img').length; iv++) { let img = document.querySelectorAll('img')[iv]; img.oncontextmenu = function () { event.returnValue = false; return false; }; if (typeof (img.onselectstart) != "undefined") { img.onselectstart = new Function("return false"); } else { img.onmousedown = new Function("return false"); img.onmouseup = new Function("return true"); } } for (let iv = 0; iv < document.querySelectorAll('video').length; iv++) { document.querySelectorAll('video')[iv].oncontextmenu = function () { event.returnValue = false; return false; }; if (typeof (document.querySelectorAll('video')[iv].onselectstart) != "undefined") { document.querySelectorAll('video')[iv].onselectstart = new Function("return false"); } else { document.querySelectorAll('video')[iv].onmousedown = new Function("return false"); document.querySelectorAll('video')[iv].onmouseup = new Function("return true"); } } }); function videoCtrl(v) { let playing = false; v.addEventListener('playing', () => { playing = true; }); v.addEventListener('pause', () => { playing = false; }); v.onclick = () => { if (playing) { v.pause(); } else { v.play(); } } }