信心满满地着手制作 => 很快开发出基础功能 => 直接投入使用 => 不时发生报错 => 修复 => （报错 => 复盘 => 排查 => 修复）…… => 自以为正常使用检查数据才发现巨大漏洞 => 有时一连串的修复打补丁
结果原本逻辑清晰的脚本就在一次次打补丁愈发臃肿，每次修复都为下次出bug的排查修复增加了难度，到现在代码已经不是给人看的了，只得推翻重来，懒得重写一遍，项目搁置。
就我目前的所有的开发烂尾的脚本大体都是这个流程，所以在面对相对较大的工程开写前先做好流程图之类的工作是必要的。

回到该记录日志的脚本，其难点并不在于功能实现上的困难，因为js是相当easy的语言，各种api只有你想不到没有你查不到的，问题在于网页前端的加载卸载。
就单个页面而言，最先碰到的问题是小破站会加载两次，这种情况下脚本会执行两次，白白浪费资源，同时会影响到全局数据自增之类的问题（已解决）。
其次是记录的部分工作需要在用户关闭页面后执行，虽然浏览器提供了多个api，但并不是每次都能顺利执行完整个流程，推测因为js是当线程语言，页面来不及执行就回收内存了（未解决）
最后是多页面数据同步的问题，这个需要配合之前判断页面关闭的部分，因为有时候用户已经退出之前的页面了，但脚本并不认为，结果多个标签页就“打起来了”，就会导致旧数据覆盖新数据（未解决）

之后还有必要的UI制作，还有更重要的，这些数据需要占用着有限的“LocalStorage”，该数据表是存于硬盘的，谷歌浏览器允许的上限为20MB，超过则无法写入其它数据，是有一定风险的。
所以需要完善容量检测以及下载清空的功能。

该脚本会作为我的真正长期项目执行。